import { makeAutoObservable, runInAction } from 'mobx';
import type { IAchievement } from '../types/AchievementTypes';

/**
 * @class AchievementsStore
 * @description –•—Ä–∞–Ω–∏–ª–∏—â–µ MobX –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.
 */
class AchievementsStore {
  /**
   * @property {IAchievement[]} achievements - –ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.
   */
  achievements: IAchievement[] = [];
  /**
   * @property {boolean} isLoading - –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –∏–¥–µ—Ç –ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö.
   */
  isLoading: boolean = false;
  /**
   * @property {string | null} error - –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞.
   */
  error: string | null = null;

  constructor() {
    makeAutoObservable(this);
  }

  /**
   * @method fetchAchievements
   * @description –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π. –ò–º–∏—Ç–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API.
   * @returns {Promise<void>}
   */
  async fetchAchievements(): Promise<void> {
    this.isLoading = true;
    this.error = null;
    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
      await new Promise((resolve) => setTimeout(resolve, 1000));

      // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π (–Ω–µ –º–µ–Ω–µ–µ 10)
      const mockAchievements: IAchievement[] = [
        {
          id: '1',
          name: '–ü–µ—Ä–≤—ã–π —à–∞–≥',
          description: '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.',
          icon: 'üë£',
          condition: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
        },
        {
          id: '2',
          name: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å',
          description: '–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.',
          icon: 'üó∫Ô∏è',
          condition: '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
        },
        {
          id: '3',
          name: '–°–æ–±–∏—Ä–∞—Ç–µ–ª—å',
          description: '–ü–æ–ª—É—á–∏—Ç–µ 5 –ª—é–±—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.',
          icon: 'üåü',
          condition: '–ü–æ–ª—É—á–∏—Ç—å 5 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
        },
        {
          id: '4',
          name: '–í–µ—Ç–µ—Ä–∞–Ω',
          description: '–ü–æ–ª—É—á–∏—Ç–µ 10 –ª—é–±—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.',
          icon: 'üèÖ',
          condition: '–ü–æ–ª—É—á–∏—Ç—å 10 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
        },
        {
          id: '5',
          name: '–ê–±—Å–æ–ª—é—Ç–Ω—ã–π —á–µ–º–ø–∏–æ–Ω',
          description: '–ü–æ–ª—É—á–∏—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.',
          icon: 'üëë',
          condition: '–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ 12 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
        },
        {
          id: '6',
          name: '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –±–∞–±–æ—á–∫–∞',
          description: '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º —Å –¥—Ä—É–∑—å—è–º–∏.',
          icon: 'ü¶ã',
          condition: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ø—Ä–æ—Ñ–∏–ª–µ–º',
        },
        {
          id: '7'
          ,name: '–ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç',
          description: '–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –æ–¥–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–æ –∫–æ–Ω—Ü–∞.',
          icon: 'üéØ',
          condition: '–í—ã–ø–æ–ª–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏–µ –ª—é–±–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∞ 100%',
        },
        {
          id: '8',
          name: '–ù–æ—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–Ω–∏–∫',
          description: '–í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–ª—É–Ω–æ—á–∏.',
          icon: 'ü¶â',
          condition: '–í–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å 00:00 –¥–æ 04:00',
        },
        {
          id: '9',
          name: '–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞',
          description: '–í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ 8 —É—Ç—Ä–∞.',
          icon: 'üê¶',
          condition: '–í–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å 04:00 –¥–æ 08:00',
        },
        {
          id: '10',
          name: '–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ - –∫–ª—é—á',
          description: '–ó–∞—Ö–æ–¥–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥.',
          icon: 'üîë',
          condition: '–í–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
        },
        {
          id: '11',
          name: '–ú–∞—Å—Ç–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏',
          description: '–û—Å—Ç–∞–≤—å—Ç–µ —Ü–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤ –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.',
          icon: 'üìù',
          condition: '–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤',
        },
        {
          id: '12',
          name: '–≠—Ä—É–¥–∏—Ç',
          description: '–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.',
          icon: 'üìö',
          condition: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑ 12 –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π',
        },
      ];

      runInAction(() => {
        this.achievements = mockAchievements;
        this.isLoading = false;
      });
    } catch (error: any) {
      runInAction(() => {
        this.error = error.message;
        this.isLoading = false;
      });
    }
  }
}

export const achievementsStore = new AchievementsStore();
